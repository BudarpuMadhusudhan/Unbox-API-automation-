function cov_149w663dfd(){var path="C:\\Users\\User\\Desktop\\API_Framework\\utility\\apiUtility.js";var hash="ba5bcc0b8e733ac002eac19cecc23f179deb6c07";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Desktop\\API_Framework\\utility\\apiUtility.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:38}},"1":{start:{line:2,column:13},end:{line:2,column:33}},"2":{start:{line:3,column:7},end:{line:3,column:20}},"3":{start:{line:17,column:12},end:{line:24,column:13}},"4":{start:{line:18,column:33},end:{line:18,column:58}},"5":{start:{line:19,column:16},end:{line:19,column:55}},"6":{start:{line:23,column:16},end:{line:23,column:67}},"7":{start:{line:26,column:25},end:{line:26,column:44}},"8":{start:{line:27,column:8},end:{line:27,column:23}},"9":{start:{line:42,column:12},end:{line:51,column:13}},"10":{start:{line:43,column:33},end:{line:45,column:20}},"11":{start:{line:46,column:16},end:{line:46,column:55}},"12":{start:{line:50,column:16},end:{line:50,column:67}},"13":{start:{line:53,column:25},end:{line:53,column:55}},"14":{start:{line:54,column:8},end:{line:54,column:23}},"15":{start:{line:70,column:12},end:{line:82,column:13}},"16":{start:{line:71,column:33},end:{line:75,column:18}},"17":{start:{line:76,column:16},end:{line:76,column:55}},"18":{start:{line:80,column:16},end:{line:80,column:67}},"19":{start:{line:84,column:23},end:{line:84,column:61}},"20":{start:{line:85,column:8},end:{line:85,column:23}},"21":{start:{line:102,column:12},end:{line:114,column:13}},"22":{start:{line:103,column:33},end:{line:107,column:18}},"23":{start:{line:108,column:16},end:{line:108,column:55}},"24":{start:{line:112,column:16},end:{line:112,column:67}},"25":{start:{line:116,column:23},end:{line:116,column:60}},"26":{start:{line:117,column:8},end:{line:117,column:23}},"27":{start:{line:135,column:12},end:{line:146,column:13}},"28":{start:{line:136,column:33},end:{line:140,column:18}},"29":{start:{line:141,column:16},end:{line:141,column:55}},"30":{start:{line:145,column:16},end:{line:145,column:67}},"31":{start:{line:148,column:23},end:{line:148,column:62}},"32":{start:{line:149,column:8},end:{line:149,column:23}},"33":{start:{line:167,column:12},end:{line:183,column:13}},"34":{start:{line:168,column:33},end:{line:168,column:47}},"35":{start:{line:169,column:16},end:{line:171,column:21}},"36":{start:{line:172,column:33},end:{line:177,column:18}},"37":{start:{line:178,column:16},end:{line:178,column:55}},"38":{start:{line:180,column:16},end:{line:180,column:35}},"39":{start:{line:182,column:16},end:{line:182,column:67}},"40":{start:{line:186,column:23},end:{line:186,column:85}},"41":{start:{line:187,column:8},end:{line:187,column:23}},"42":{start:{line:201,column:12},end:{line:208,column:13}},"43":{start:{line:202,column:33},end:{line:202,column:61}},"44":{start:{line:203,column:16},end:{line:203,column:55}},"45":{start:{line:207,column:16},end:{line:207,column:67}},"46":{start:{line:210,column:23},end:{line:210,column:43}},"47":{start:{line:211,column:8},end:{line:211,column:23}},"48":{start:{line:215,column:0},end:{line:215,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:28},end:{line:28,column:5}},line:12},"1":{name:"fetchData",decl:{start:{line:16,column:23},end:{line:16,column:32}},loc:{start:{line:16,column:43},end:{line:25,column:9}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:53},end:{line:55,column:5}},line:36},"3":{name:"fetchData",decl:{start:{line:41,column:23},end:{line:41,column:32}},loc:{start:{line:41,column:54},end:{line:52,column:9}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:64,column:4},end:{line:64,column:5}},loc:{start:{line:64,column:38},end:{line:86,column:5}},line:64},"5":{name:"sendHttpPostRequest",decl:{start:{line:69,column:23},end:{line:69,column:42}},loc:{start:{line:69,column:61},end:{line:83,column:9}},line:69},"6":{name:"(anonymous_6)",decl:{start:{line:95,column:4},end:{line:95,column:5}},loc:{start:{line:95,column:37},end:{line:118,column:5}},line:95},"7":{name:"sendHttpPutRequest",decl:{start:{line:101,column:23},end:{line:101,column:41}},loc:{start:{line:101,column:60},end:{line:115,column:9}},line:101},"8":{name:"(anonymous_8)",decl:{start:{line:127,column:4},end:{line:127,column:5}},loc:{start:{line:127,column:39},end:{line:150,column:5}},line:127},"9":{name:"sendHttpPatchRequest",decl:{start:{line:134,column:23},end:{line:134,column:43}},loc:{start:{line:134,column:62},end:{line:147,column:9}},line:134},"10":{name:"(anonymous_10)",decl:{start:{line:159,column:4},end:{line:159,column:5}},loc:{start:{line:159,column:62},end:{line:188,column:5}},line:159},"11":{name:"sendPostRequestWithFile",decl:{start:{line:166,column:23},end:{line:166,column:46}},loc:{start:{line:166,column:86},end:{line:184,column:9}},line:166},"12":{name:"(anonymous_12)",decl:{start:{line:195,column:4},end:{line:195,column:5}},loc:{start:{line:195,column:31},end:{line:212,column:5}},line:195},"13":{name:"deleteData",decl:{start:{line:200,column:23},end:{line:200,column:33}},loc:{start:{line:200,column:44},end:{line:209,column:9}},line:200}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ba5bcc0b8e733ac002eac19cecc23f179deb6c07"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_149w663dfd=function(){return actualCoverage;};}return actualCoverage;}cov_149w663dfd();const axios=(cov_149w663dfd().s[0]++,require('axios').default);var FormData=(cov_149w663dfd().s[1]++,require('form-data'));var fs=(cov_149w663dfd().s[2]++,require('fs'));class APIUtility{/**
     * @description This method is used to make a GET request
     * @param {string} endPoint 
     * @returns any[]
     * @author SWARAJ <swaraj.t@unboxrobotics.com>
     */async getData(endPoint){cov_149w663dfd().f[0]++;/**
         * @param {string} endPoint
         */async function fetchData(endPoint){cov_149w663dfd().f[1]++;cov_149w663dfd().s[3]++;try{const response=(cov_149w663dfd().s[4]++,await axios.get(endPoint));cov_149w663dfd().s[5]++;return[response.status,response.data];}catch(error){cov_149w663dfd().s[6]++;// console.log(error);
// @ts-ignore
return[error.response.status,error.response.data];}}const response=(cov_149w663dfd().s[7]++,fetchData(endPoint));cov_149w663dfd().s[8]++;return response;}/**
     * @description This method is used to make a GET request by providing query Parameter
     * @param {string} endPoint
     * @returns any[]
     * @param {object} queryParam
     * @author SWARAJ <swaraj.t@unboxrobotics.com>
     */async getDataWithQueryParam(endPoint,queryParam){cov_149w663dfd().f[2]++;/**
         * @param {string} endPoint
         * @param {object} [queryParam]
         */async function fetchData(endPoint,queryParam){cov_149w663dfd().f[3]++;cov_149w663dfd().s[9]++;try{const response=(cov_149w663dfd().s[10]++,await axios.get(endPoint,{params:queryParam}));cov_149w663dfd().s[11]++;return[response.status,response.data];}catch(error){cov_149w663dfd().s[12]++;// console.log(error);
// @ts-ignore
return[error.response.status,error.response.data];}}const response=(cov_149w663dfd().s[13]++,fetchData(endPoint,queryParam));cov_149w663dfd().s[14]++;return response;}/**
     * @description This method is used to perform POST request by passing request payload
     * @param {string} endPoint 
     * @param {object} reqBody 
     * @returns any[]
     * @author SWARAJ <swaraj.t@unboxrobotics.com>
     */async postData(endPoint,reqBody){cov_149w663dfd().f[4]++;/**
         * @param {string} url
         * @param {object} requestData
         */async function sendHttpPostRequest(url,requestData){cov_149w663dfd().f[5]++;cov_149w663dfd().s[15]++;try{const response=(cov_149w663dfd().s[16]++,await axios.post(url,requestData,{headers:{'Content-Type':'application/json'}}));cov_149w663dfd().s[17]++;return[response.status,response.data];}catch(error){cov_149w663dfd().s[18]++;// console.log(error);
// @ts-ignore
return[error.response.status,error.response.data];}}var response=(cov_149w663dfd().s[19]++,sendHttpPostRequest(endPoint,reqBody));cov_149w663dfd().s[20]++;return response;}/**
     * @description This method is used to perform PUT request by providing endpoint and request payload
     * @param {string} endPoint
     * @param {object} reqBody
     * @returns any[]
     * @author SWARAJ <swaraj.t@unboxrobotics.com>
     */async putData(endPoint,reqBody){cov_149w663dfd().f[6]++;/**
         * @param {string} url
         * @param {any} requestData
         * @author SWARAJ <swaraj.t@unboxrobotics.com>
         */async function sendHttpPutRequest(url,requestData){cov_149w663dfd().f[7]++;cov_149w663dfd().s[21]++;try{const response=(cov_149w663dfd().s[22]++,await axios.put(url,requestData,{headers:{'Content-Type':'application/json'}}));cov_149w663dfd().s[23]++;return[response.status,response.data];}catch(error){cov_149w663dfd().s[24]++;// console.log(error);
// @ts-ignore
return[error.response.status,error.response.data];}}var response=(cov_149w663dfd().s[25]++,sendHttpPutRequest(endPoint,reqBody));cov_149w663dfd().s[26]++;return response;}/**
     * @description This method is used to perform PATCH request by providing endpoint and request payload
     * @param {string} endPoint
     * @param {object} reqBody
     * @returns any[]
     * @author SWARAJ <swaraj.t@unboxrobotics.com>
     */async patchData(endPoint,reqBody){cov_149w663dfd().f[8]++;/**
         * @description This method is used to perform patch API call by providing the following parametrs
         * @param {string} url
         * @param {any} requestData
         * @author SWARAJ <swaraj.t@unboxrobotics.com>
         */async function sendHttpPatchRequest(url,requestData){cov_149w663dfd().f[9]++;cov_149w663dfd().s[27]++;try{const response=(cov_149w663dfd().s[28]++,await axios.patch(url,requestData,{headers:{'Content-Type':'application/json'}}));cov_149w663dfd().s[29]++;return[response.status,response.data];}catch(error){cov_149w663dfd().s[30]++;// console.log(error);
// @ts-ignore
return[error.response.status,error.response.data];}}var response=(cov_149w663dfd().s[31]++,sendHttpPatchRequest(endPoint,reqBody));cov_149w663dfd().s[32]++;return response;}/**
     * @description This method is used to perform POST request by uploading CSV file
     * @param {string} endPoint
     * @param {string} filePath
     * @param {string} [fileName]
     * @param {string} [uploadKey]
     */async postDataFile(endPoint,filePath,fileName,uploadKey){cov_149w663dfd().f[10]++;/**
         * @param {string} endPoint
         * @param {string} filePath
         * @param {undefined} [fileName]
         * @param {undefined} [uploadKey]
         */async function sendPostRequestWithFile(endPoint,filePath,fileName,uploadKey){cov_149w663dfd().f[11]++;cov_149w663dfd().s[33]++;try{const formData=(cov_149w663dfd().s[34]++,new FormData());cov_149w663dfd().s[35]++;formData.append(`${uploadKey}`,fs.createReadStream(filePath),{filename:`${fileName}`// Replace with the desired filename in the request
});const response=(cov_149w663dfd().s[36]++,await axios.post(endPoint,formData,{headers:{'accept':'application/json','Content-Type':'multipart/form-data'}}));cov_149w663dfd().s[37]++;return[response.status,response.data];}catch(error){cov_149w663dfd().s[38]++;console.log(error);// @ts-ignore
cov_149w663dfd().s[39]++;return[error.response.status,error.response.data];}}// @ts-ignore
var response=(cov_149w663dfd().s[40]++,sendPostRequestWithFile(endPoint,filePath,fileName,uploadKey));cov_149w663dfd().s[41]++;return response;}/**
     * @description This is used to perform the delete API request by providing the endpoint
     * @param {string} endPoint
     * @author SWARAJ <swaraj.t@unboxrobotics.com>
     */async deleteData(endPoint){cov_149w663dfd().f[12]++;/**
         * @param {string} endPoint
         */async function deleteData(endPoint){cov_149w663dfd().f[13]++;cov_149w663dfd().s[42]++;try{const response=(cov_149w663dfd().s[43]++,await axios.delete(endPoint));cov_149w663dfd().s[44]++;return[response.status,response.data];}catch(error){cov_149w663dfd().s[45]++;// @ts-ignore
return[error.response.status,error.response.data];}}var response=(cov_149w663dfd().s[46]++,deleteData(endPoint));cov_149w663dfd().s[47]++;return response;}}cov_149w663dfd().s[48]++;module.exports=new APIUtility();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,