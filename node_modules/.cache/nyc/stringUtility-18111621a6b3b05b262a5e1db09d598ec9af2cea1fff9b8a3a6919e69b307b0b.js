function cov_2065rjx52f(){var path="C:\\Users\\User\\Desktop\\API_Framework\\utility\\stringUtility.js";var hash="e3a5aada85c524fb962d846336080e3d510e4c1b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\Desktop\\API_Framework\\utility\\stringUtility.js",statementMap:{"0":{start:{line:11,column:4},end:{line:11,column:83}},"1":{start:{line:20,column:4},end:{line:25,column:5}},"2":{start:{line:21,column:6},end:{line:21,column:36}},"3":{start:{line:23,column:6},end:{line:23,column:57}},"4":{start:{line:24,column:6},end:{line:24,column:18}},"5":{start:{line:36,column:4},end:{line:36,column:29}},"6":{start:{line:45,column:17},end:{line:45,column:31}},"7":{start:{line:46,column:4},end:{line:50,column:5}},"8":{start:{line:47,column:27},end:{line:47,column:52}},"9":{start:{line:48,column:20},end:{line:48,column:48}},"10":{start:{line:49,column:6},end:{line:49,column:51}},"11":{start:{line:51,column:4},end:{line:51,column:18}},"12":{start:{line:60,column:4},end:{line:60,column:38}},"13":{start:{line:64,column:0},end:{line:64,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:2},end:{line:10,column:3}},loc:{start:{line:10,column:68},end:{line:12,column:3}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:2},end:{line:19,column:3}},loc:{start:{line:19,column:39},end:{line:26,column:3}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:2},end:{line:35,column:3}},loc:{start:{line:35,column:45},end:{line:37,column:3}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:44,column:2},end:{line:44,column:3}},loc:{start:{line:44,column:54},end:{line:52,column:3}},line:44},"4":{name:"(anonymous_4)",decl:{start:{line:59,column:2},end:{line:59,column:3}},loc:{start:{line:59,column:39},end:{line:61,column:3}},line:59}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e3a5aada85c524fb962d846336080e3d510e4c1b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2065rjx52f=function(){return actualCoverage;};}return actualCoverage;}cov_2065rjx52f();class StringUtility{/**
   * @description This method is used to replace a Data in a given string by providing following parameters
   * @param {string} originalString
   * @param {string | RegExp} dataToReplace
   * @param {string} replacementData
   * @author SWARAJ <swaraj.t@unboxrobotics.com>
   */async replaceData(originalString,dataToReplace,replacementData){cov_2065rjx52f().f[0]++;cov_2065rjx52f().s[0]++;return originalString.replace(new RegExp(dataToReplace,"g"),replacementData);}/**
 * @description This method is used to convert JSON String to JSON Object
 * @param {string} jsonString
 * @author SWARAJ <swaraj.t@unboxrobotics.com>
 */async stringToJsonObject(jsonString){cov_2065rjx52f().f[1]++;cov_2065rjx52f().s[1]++;try{cov_2065rjx52f().s[2]++;return JSON.parse(jsonString);}catch(error){cov_2065rjx52f().s[3]++;console.error('Error parsing JSON string:',error);cov_2065rjx52f().s[4]++;return null;}}/**
* @description This method is used to concate two strings
* @param {string} string1
* @param {string} string2
* @author SWARAJ <swaraj.t@unboxrobotics.com>
*/async concatenateStrings(string1,string2){cov_2065rjx52f().f[2]++;cov_2065rjx52f().s[5]++;return string1+string2;}/**
   *@description This method is ised to replace multiple values in a string by providing below parameters 
   * @param {string} originalString
   * @param {{ [x: string]: any; }} replacements
   */async replaceMultiple(originalString,replacements){cov_2065rjx52f().f[3]++;let result=(cov_2065rjx52f().s[6]++,originalString);cov_2065rjx52f().s[7]++;for(const searchValue in replacements){const replaceValue=(cov_2065rjx52f().s[8]++,replacements[searchValue]);const regex=(cov_2065rjx52f().s[9]++,new RegExp(searchValue,'g'));cov_2065rjx52f().s[10]++;result=result.replace(regex,replaceValue);}cov_2065rjx52f().s[11]++;return result;}/**
   * @description This method is used to convert jsonObject to string
   * @param {object} jsonObject 
   * @author SWARAJ <swaraj.t@unboxrobotics.com> 
  */async jsonObjectToString(jsonObject){cov_2065rjx52f().f[4]++;cov_2065rjx52f().s[12]++;return JSON.stringify(jsonObject);}}cov_2065rjx52f().s[13]++;module.exports=new StringUtility();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjA2NXJqeDUyZiIsImFjdHVhbENvdmVyYWdlIiwiU3RyaW5nVXRpbGl0eSIsInJlcGxhY2VEYXRhIiwib3JpZ2luYWxTdHJpbmciLCJkYXRhVG9SZXBsYWNlIiwicmVwbGFjZW1lbnREYXRhIiwiZiIsInMiLCJyZXBsYWNlIiwiUmVnRXhwIiwic3RyaW5nVG9Kc29uT2JqZWN0IiwianNvblN0cmluZyIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiY29uc29sZSIsImNvbmNhdGVuYXRlU3RyaW5ncyIsInN0cmluZzEiLCJzdHJpbmcyIiwicmVwbGFjZU11bHRpcGxlIiwicmVwbGFjZW1lbnRzIiwicmVzdWx0Iiwic2VhcmNoVmFsdWUiLCJyZXBsYWNlVmFsdWUiLCJyZWdleCIsImpzb25PYmplY3RUb1N0cmluZyIsImpzb25PYmplY3QiLCJzdHJpbmdpZnkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsic3RyaW5nVXRpbGl0eS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTdHJpbmdVdGlsaXR5IHtcclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uIFRoaXMgbWV0aG9kIGlzIHVzZWQgdG8gcmVwbGFjZSBhIERhdGEgaW4gYSBnaXZlbiBzdHJpbmcgYnkgcHJvdmlkaW5nIGZvbGxvd2luZyBwYXJhbWV0ZXJzXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG9yaWdpbmFsU3RyaW5nXHJcbiAgICogQHBhcmFtIHtzdHJpbmcgfCBSZWdFeHB9IGRhdGFUb1JlcGxhY2VcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVwbGFjZW1lbnREYXRhXHJcbiAgICogQGF1dGhvciBTV0FSQUogPHN3YXJhai50QHVuYm94cm9ib3RpY3MuY29tPlxyXG4gICAqL1xyXG4gIGFzeW5jIHJlcGxhY2VEYXRhKG9yaWdpbmFsU3RyaW5nLCBkYXRhVG9SZXBsYWNlLCByZXBsYWNlbWVudERhdGEpIHtcclxuICAgIHJldHVybiBvcmlnaW5hbFN0cmluZy5yZXBsYWNlKG5ldyBSZWdFeHAoZGF0YVRvUmVwbGFjZSwgXCJnXCIpLCByZXBsYWNlbWVudERhdGEpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAqIEBkZXNjcmlwdGlvbiBUaGlzIG1ldGhvZCBpcyB1c2VkIHRvIGNvbnZlcnQgSlNPTiBTdHJpbmcgdG8gSlNPTiBPYmplY3RcclxuICogQHBhcmFtIHtzdHJpbmd9IGpzb25TdHJpbmdcclxuICogQGF1dGhvciBTV0FSQUogPHN3YXJhai50QHVuYm94cm9ib3RpY3MuY29tPlxyXG4gKi9cclxuICBhc3luYyBzdHJpbmdUb0pzb25PYmplY3QoanNvblN0cmluZykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoanNvblN0cmluZyk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwYXJzaW5nIEpTT04gc3RyaW5nOicsIGVycm9yKTtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbi8qKlxyXG4qIEBkZXNjcmlwdGlvbiBUaGlzIG1ldGhvZCBpcyB1c2VkIHRvIGNvbmNhdGUgdHdvIHN0cmluZ3NcclxuKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nMVxyXG4qIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcyXHJcbiogQGF1dGhvciBTV0FSQUogPHN3YXJhai50QHVuYm94cm9ib3RpY3MuY29tPlxyXG4qL1xyXG4gIGFzeW5jIGNvbmNhdGVuYXRlU3RyaW5ncyhzdHJpbmcxLCBzdHJpbmcyKSB7XHJcbiAgICByZXR1cm4gc3RyaW5nMSArIHN0cmluZzI7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKkBkZXNjcmlwdGlvbiBUaGlzIG1ldGhvZCBpcyBpc2VkIHRvIHJlcGxhY2UgbXVsdGlwbGUgdmFsdWVzIGluIGEgc3RyaW5nIGJ5IHByb3ZpZGluZyBiZWxvdyBwYXJhbWV0ZXJzIFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBvcmlnaW5hbFN0cmluZ1xyXG4gICAqIEBwYXJhbSB7eyBbeDogc3RyaW5nXTogYW55OyB9fSByZXBsYWNlbWVudHNcclxuICAgKi9cclxuICBhc3luYyByZXBsYWNlTXVsdGlwbGUob3JpZ2luYWxTdHJpbmcsIHJlcGxhY2VtZW50cykge1xyXG4gICAgbGV0IHJlc3VsdCA9IG9yaWdpbmFsU3RyaW5nO1xyXG4gICAgZm9yIChjb25zdCBzZWFyY2hWYWx1ZSBpbiByZXBsYWNlbWVudHMpIHtcclxuICAgICAgY29uc3QgcmVwbGFjZVZhbHVlID0gcmVwbGFjZW1lbnRzW3NlYXJjaFZhbHVlXTtcclxuICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKHNlYXJjaFZhbHVlLCAnZycpO1xyXG4gICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZShyZWdleCwgcmVwbGFjZVZhbHVlKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24gVGhpcyBtZXRob2QgaXMgdXNlZCB0byBjb252ZXJ0IGpzb25PYmplY3QgdG8gc3RyaW5nXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGpzb25PYmplY3QgXHJcbiAgICogQGF1dGhvciBTV0FSQUogPHN3YXJhai50QHVuYm94cm9ib3RpY3MuY29tPiBcclxuICAqL1xyXG4gIGFzeW5jIGpzb25PYmplY3RUb1N0cmluZyhqc29uT2JqZWN0KSB7XHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoanNvbk9iamVjdCk7XHJcbiAgfVxyXG5cclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBTdHJpbmdVdGlsaXR5KCk7Il0sIm1hcHBpbmdzIjoia3NFQWVZO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQWZaLEtBQU0sQ0FBQUUsYUFBYyxDQUVsQjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUNFLEtBQU0sQ0FBQUMsV0FBV0EsQ0FBQ0MsY0FBYyxDQUFFQyxhQUFhLENBQUVDLGVBQWUsQ0FBRSxDQUFBTixjQUFBLEdBQUFPLENBQUEsTUFBQVAsY0FBQSxHQUFBUSxDQUFBLE1BQ2hFLE1BQU8sQ0FBQUosY0FBYyxDQUFDSyxPQUFPLENBQUMsR0FBSSxDQUFBQyxNQUFNLENBQUNMLGFBQWEsQ0FBRSxHQUFHLENBQUMsQ0FBRUMsZUFBZSxDQUFDLENBQ2hGLENBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQSxHQUNFLEtBQU0sQ0FBQUssa0JBQWtCQSxDQUFDQyxVQUFVLENBQUUsQ0FBQVosY0FBQSxHQUFBTyxDQUFBLE1BQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUNuQyxHQUFJLENBQUFSLGNBQUEsR0FBQVEsQ0FBQSxNQUNGLE1BQU8sQ0FBQUssSUFBSSxDQUFDQyxLQUFLLENBQUNGLFVBQVUsQ0FBQyxDQUMvQixDQUFFLE1BQU9HLEtBQUssQ0FBRSxDQUFBZixjQUFBLEdBQUFRLENBQUEsTUFDZFEsT0FBTyxDQUFDRCxLQUFLLENBQUMsNEJBQTRCLENBQUVBLEtBQUssQ0FBQyxDQUFDZixjQUFBLEdBQUFRLENBQUEsTUFDbkQsTUFBTyxLQUFJLENBQ2IsQ0FDRixDQUdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUNFLEtBQU0sQ0FBQVMsa0JBQWtCQSxDQUFDQyxPQUFPLENBQUVDLE9BQU8sQ0FBRSxDQUFBbkIsY0FBQSxHQUFBTyxDQUFBLE1BQUFQLGNBQUEsR0FBQVEsQ0FBQSxNQUN6QyxNQUFPLENBQUFVLE9BQU8sQ0FBR0MsT0FBTyxDQUMxQixDQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsS0FDRSxLQUFNLENBQUFDLGVBQWVBLENBQUNoQixjQUFjLENBQUVpQixZQUFZLENBQUUsQ0FBQXJCLGNBQUEsR0FBQU8sQ0FBQSxNQUNsRCxHQUFJLENBQUFlLE1BQU0sRUFBQXRCLGNBQUEsR0FBQVEsQ0FBQSxNQUFHSixjQUFjLEVBQUNKLGNBQUEsR0FBQVEsQ0FBQSxNQUM1QixJQUFLLEtBQU0sQ0FBQWUsV0FBVyxHQUFJLENBQUFGLFlBQVksQ0FBRSxDQUN0QyxLQUFNLENBQUFHLFlBQVksRUFBQXhCLGNBQUEsR0FBQVEsQ0FBQSxNQUFHYSxZQUFZLENBQUNFLFdBQVcsQ0FBQyxFQUM5QyxLQUFNLENBQUFFLEtBQUssRUFBQXpCLGNBQUEsR0FBQVEsQ0FBQSxNQUFHLEdBQUksQ0FBQUUsTUFBTSxDQUFDYSxXQUFXLENBQUUsR0FBRyxDQUFDLEVBQUN2QixjQUFBLEdBQUFRLENBQUEsT0FDM0NjLE1BQU0sQ0FBR0EsTUFBTSxDQUFDYixPQUFPLENBQUNnQixLQUFLLENBQUVELFlBQVksQ0FBQyxDQUM5QyxDQUFDeEIsY0FBQSxHQUFBUSxDQUFBLE9BQ0QsTUFBTyxDQUFBYyxNQUFNLENBQ2YsQ0FFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBLElBQ0UsS0FBTSxDQUFBSSxrQkFBa0JBLENBQUNDLFVBQVUsQ0FBRSxDQUFBM0IsY0FBQSxHQUFBTyxDQUFBLE1BQUFQLGNBQUEsR0FBQVEsQ0FBQSxPQUNuQyxNQUFPLENBQUFLLElBQUksQ0FBQ2UsU0FBUyxDQUFDRCxVQUFVLENBQUMsQ0FDbkMsQ0FFRixDQUFDM0IsY0FBQSxHQUFBUSxDQUFBLE9BQ0RxQixNQUFNLENBQUNDLE9BQU8sQ0FBRyxHQUFJLENBQUE1QixhQUFhLENBQUMsQ0FBQyJ9